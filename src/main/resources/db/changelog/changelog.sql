--liquibase formatted sql

--changeset robotTX:create-priority-table
--Creates Priority table
--rollback DROP TABLE priority CASCADE CONSTRAINTS
CREATE TABLE priority
(
    id             NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    priority_level NUMBER UNIQUE NOT NULL,
    name           VARCHAR2(30)  NOT NULL,
    created_at     TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at     TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

--changeset robotTX:create-category-table
--Creates Category table
--rollback DROP TABLE category CASCADE CONSTRAINTS
CREATE TABLE category
(
    id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       VARCHAR2(30) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

--changeset robotTX:create-todo-table
--Creates Todo table
--rollback DROP TABLE todo CASCADE CONSTRAINTS
CREATE TABLE todo
(
    id          NUMBER GENERATED ALWAYS AS IDENTITY (START WITH 1000000 INCREMENT BY 17 MAXVALUE 9999999999 NOCYCLE CACHE 20) PRIMARY KEY,
    title       VARCHAR2(100),
    description CLOB,
    deadline    TIMESTAMP WITH TIME ZONE,
    completed   CHAR(1) CHECK ( completed IN ('Y', 'N') ) NOT NULL,
    owner       VARCHAR2(36)                              NOT NULL,
    parent      NUMBER,
    shared      CHAR(1) CHECK ( shared IN ('Y', 'N') )    NOT NULL,
    priority    NUMBER                                    NOT NULL,
    created_at  TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at  TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (parent) REFERENCES todo (id),
    FOREIGN KEY (priority) REFERENCES priority (id),
    CONSTRAINT check_has_content CHECK ( title IS NOT NULL OR description IS NOT NULL )
);

--changeset robotTX:create-category_todo-join-table
--Creates Category_todo join table
--rollback DROP TABLE category_todo CASCADE CONSTRAINTS
CREATE TABLE category_todo
(
    category_id NUMBER,
    todo_id     NUMBER,
    PRIMARY KEY (category_id, todo_id),
    FOREIGN KEY (category_id) REFERENCES category (id) ON DELETE CASCADE,
    FOREIGN KEY (todo_id) REFERENCES todo (id) ON DELETE CASCADE
);

--changeset robotTX:create-access_level-table
--Creates Access Level table
--rollback DROP TABLE access_level CASCADE CONSTRAINTS
CREATE TABLE access_level
(
    id           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    access_level NUMBER UNIQUE NOT NULL,
    name         VARCHAR2(30)  NOT NULL,
    description  VARCHAR2(100) NOT NULL
);

--changeset robotTX:create-todo_user-join-table
--Creates Todo_user join table
--rollback DROP TABLE todo_user CASCADE CONSTRAINTS
CREATE TABLE todo_user
(
    todo_id      NUMBER,
    user_id      NUMBER,
    access_level NUMBER NOT NULL,
    PRIMARY KEY (todo_id, user_id),
    FOREIGN KEY (todo_id) REFERENCES todo (id),
    FOREIGN KEY (access_level) REFERENCES access_level (id)
);

--changeset robotTX:enable-real-time-cache-mode
--Enables real time cache, setup the indexes in NRT mode
--rollback CALL ctx_ddl.drop_preference('USERS');
CALL ctx_ddl.create_preference('USERS', 'BASIC_STORAGE');
CALL ctx_ddl.set_attribute('USERS', 'STAGE_ITAB', 'true');

--changeset robotTX:create-index-for-todo-title
--Creates index for todo title
--rollback DROP INDEX index_todo_title
CREATE INDEX index_todo_title ON todo (TITLE)
    INDEXTYPE IS CTXSYS.CONTEXT PARAMETERS ( 'storage users sync (on commit)' );

--changeset robotTX:create-index-for-todo-description
--Creates index for todo description
--rollback DROP INDEX index_todo_description
CREATE INDEX index_todo_description ON todo (DESCRIPTION)
    INDEXTYPE IS CTXSYS.CONTEXT PARAMETERS ( 'storage users sync (on commit)' );